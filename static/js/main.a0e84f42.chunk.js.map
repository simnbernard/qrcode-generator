{"version":3,"sources":["i18n.ts","theme.ts","pages/home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","Backend","I18nextBrowserLanguageDetector","initReactI18next","init","fallbackLng","common","primary","main","darkTheme","merge","cloneDeep","palette","type","background","paper","default","lightTheme","useStyles","makeStyles","theme","createStyles","container","paddingTop","spacing","grow","flexGrow","Home","classes","useTheme","t","useTranslation","useState","value","setValue","qrContent","setQrContent","backgroundColor","setBackgroundColor","color","setColor","size","setSize","prefersDarkMode","useMediaQuery","noSsr","isMobile","breakpoints","down","customTheme","useMemo","createMuiTheme","handleClose","useCallback","undefined","CssBaseline","AppBar","position","elevation","Toolbar","fontSize","className","href","target","Divider","Container","Grid","item","xs","TextField","fullWidth","multiline","rows","variant","label","onChange","e","md","Box","mt","textAlign","Typography","bgColor","fgColor","renderAs","includeMargin","Button","disableElevation","onClick","disabled","Boolean","Dialog","onClose","open","maxWidth","fullScreen","DialogContent","DialogActions","App","useEffect","ReactGA","initialize","pageview","window","location","pathname","search","fallback","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0e84f42.chunk.js","sourcesContent":["import { initReactI18next } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport I18nextBrowserLanguageDetector from \"i18next-browser-languagedetector\";\nimport Backend from \"i18next-http-backend\";\n\ni18n\n  .use(Backend)\n  .use(I18nextBrowserLanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n  });\n","import { ThemeOptions } from \"@material-ui/core\";\nimport { cloneDeep, merge } from \"lodash\";\n\nconst common = {\n  primary: {\n    main: \"#58A6FF\",\n  },\n};\n\nconst dark = {\n  palette: {\n    type: \"dark\",\n    background: { paper: \"#151B22\", default: \"#0D1117\" },\n  },\n};\n\nconst light = {\n  palette: {\n    type: \"light\",\n    background: { paper: \"#FFF\", default: \"#FAFAFA\" },\n  },\n};\n\nexport const darkTheme = merge(cloneDeep(common), dark) as ThemeOptions;\nexport const lightTheme = merge(cloneDeep(common), light) as ThemeOptions;\n","import {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  createMuiTheme,\n  createStyles,\n  CssBaseline,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Divider,\n  Grid,\n  makeStyles,\n  MuiThemeProvider,\n  TextField,\n  Theme,\n  Toolbar,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport QRCode from \"qrcode.react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport CenterFocusStrongIcon from \"@material-ui/icons/CenterFocusStrong\";\nimport { darkTheme, lightTheme } from \"../theme\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    container: {\n      paddingTop: theme.spacing(2),\n    },\n    grow: {\n      flexGrow: 1,\n    },\n  });\n});\n\nconst Home = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n\n  const [value, setValue] = useState<string>();\n  const [qrContent, setQrContent] = useState<string>();\n  const [backgroundColor, setBackgroundColor] = useState<string>(\"#FFF\");\n  const [color, setColor] = useState<string>(\"#000\");\n  const [size, setSize] = useState<number>(1024);\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\", {\n    noSsr: true,\n  });\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const customTheme = useMemo(\n    () => createMuiTheme(prefersDarkMode ? darkTheme : lightTheme),\n    [prefersDarkMode]\n  );\n\n  const handleClose = useCallback(() => setQrContent(undefined), [\n    setQrContent,\n  ]);\n\n  return (\n    <MuiThemeProvider theme={customTheme}>\n      <CssBaseline />\n      <AppBar position=\"relative\" elevation={0} color=\"inherit\">\n        <Toolbar>\n          <CenterFocusStrongIcon fontSize=\"large\" />\n          <div className={classes.grow} />\n          <a href=\"https://www.linkedin.com/in/simonbernard94/\" target=\"blank\">\n            <LinkedInIcon color=\"primary\" />\n          </a>\n        </Toolbar>\n      </AppBar>\n      <Divider />\n      <Container className={classes.container}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              label={t(\"content\")}\n              onChange={(e) => setValue(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              value={backgroundColor}\n              label={t(\"backgroundColor\")}\n              variant=\"outlined\"\n              onChange={(e) => setBackgroundColor(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              value={color}\n              label={t(\"color\")}\n              variant=\"outlined\"\n              onChange={(e) => setColor(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TextField\n              fullWidth\n              value={size}\n              type=\"number\"\n              label={t(\"size\")}\n              variant=\"outlined\"\n              onChange={(e) => setSize(+e.target.value)}\n            />\n          </Grid>\n        </Grid>\n        <Box mt={2} textAlign=\"center\">\n          <Typography variant=\"subtitle1\">Preview</Typography>\n          <QRCode\n            value=\"https://www.youtube.com/watch?v=RV6aLIQgmYg\"\n            bgColor={backgroundColor}\n            fgColor={color}\n            size={150}\n            renderAs=\"svg\"\n            includeMargin={true}\n          />\n        </Box>\n        <Box mt={2} textAlign=\"center\">\n          <Button\n            disableElevation\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setQrContent(value)}\n            disabled={!Boolean(value)}\n          >\n            {t(\"generate\")}\n          </Button>\n        </Box>\n      </Container>\n      <Dialog\n        onClose={handleClose}\n        open={Boolean(qrContent)}\n        maxWidth={false}\n        fullScreen={isMobile}\n      >\n        <DialogContent>\n          {qrContent && (\n            <QRCode\n              value={qrContent}\n              bgColor={backgroundColor}\n              fgColor={color}\n              size={size}\n              renderAs=\"canvas\"\n              includeMargin={true}\n            />\n          )}\n        </DialogContent>\n        <Divider />\n        <DialogActions>\n          <Button\n            disableElevation\n            variant=\"text\"\n            color=\"primary\"\n            onClick={handleClose}\n          >\n            {t(\"close\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </MuiThemeProvider>\n  );\n};\n\nexport default Home;\n","import \"./i18n\";\nimport { Suspense, useEffect } from \"react\";\nimport Home from \"./pages/home\";\nimport ReactGA from \"react-ga\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst App = () => {\n  useEffect(() => {\n    ReactGA.initialize(\"258291945\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  return (\n    <Suspense fallback={<LinearProgress />}>\n      <Home />\n    </Suspense>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}